{"mappings":"AAAA;AAEA,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,MAAM,gBAAgB,CAAC;IACrB,IAAI,SAAS,KAAK,KAAK,CAAC,GAAG,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC;IAEzD,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAC/B,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,WAAW,IACjC,SAAS,OAAO,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IAIlD,OAAO;AACT;AAEA,MAAM,eAAe,CAAC;IACpB,MAAM,OAAO,CAAC,CAAC;QACb,MAAM,QAAQ,SAAS,aAAa,CAAC;QACrC,MAAM,WAAW,KAAK,YAAY,CAAC;QAEnC,MAAM,SAAS,GAAG,cAAc,UAAU,WAAW;QACrD,MAAM,YAAY,CAAC,OAAO,KAAK,EAAE;QACjC,MAAM,SAAS,CAAC,GAAG,CAAC;QACpB,KAAK,YAAY,CAAC,eAAe,cAAc;QAC/C,KAAK,MAAM,CAAC;IACd;AACF;AAEA,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nconst textTransform = (text) => {\n  let result = text.slice(0, 1).toUpperCase() + text.slice(1);\n\n  for (let i = 1; i < text.length; i++) {\n    if (text[i] !== text[i].toLowerCase()) {\n      result = result.replace(text[i], ` ${text[i]}`);\n    }\n  }\n\n  return result;\n};\n\nconst createLables = (items) => {\n  items.forEach((item) => {\n    const lable = document.createElement('label');\n    const itemName = item.getAttribute('name');\n\n    lable.innerText = textTransform(itemName).toUpperCase();\n    lable.setAttribute('for', item.id);\n    lable.classList.add('field-label');\n    item.setAttribute('placeholder', textTransform(itemName));\n    item.before(lable);\n  });\n};\n\ncreateLables(inputs);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}